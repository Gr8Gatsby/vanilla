class DataTable extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n            <style>\n                .dataTable{\n                    border: 1px solid red;\n                    padding: 5px;\n                }\n            </style>\n            <slot></slot>\n            <slot name="table">\n                <div class="dataTable"></div>\n            </slot>\n        '}connectedCallback(){const t=this.shadowRoot.getRootNode().querySelector("slot");t.addEventListener("slotchange",function(e){const a=[];t.assignedElements().forEach(t=>{let e=t.attributes["data-editable"].value,d=t.attributes["display-name"].value,s=t.attributes.name.value;a.push({name:s,display:d,editable:e})}),this.drawHeader(a)}.bind(this))}drawHeader(t){let e=this.shadowRoot.getRootNode().querySelector("div.dataTable");var a=document.createElement("data-row");t.forEach(t=>{let e=document.createElement("data-cell");e.setAttribute("value",t.display),e.setAttribute("editable",!1),e.setAttribute("display",t.display),a.shadowRoot.appendChild(e)}),a.setAttribute("recordId",null),e.appendChild(a),this.drawRows(t)}drawRows(t){let e=this.getAttribute("object-name"),a=Number(this.getAttribute("page-size")),d=this.shadowRoot.getRootNode().querySelector("div.dataTable");(new SObjectModel[e]).retrieve({limit:a},function(e,a){if(e)throw new Error(e.message);return a.forEach(function(e){var a=document.createElement("data-row");a.setAttribute("recordId",e.get("Id")),a.setAttribute("cols",JSON.stringify(t)),a.setAttribute("values",JSON.stringify(e._props)),d.appendChild(a)}),[]})}}customElements.define("data-table",DataTable);